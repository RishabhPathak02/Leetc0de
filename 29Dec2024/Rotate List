/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head == null || head.next == null || k == 0 ) return head ;
        ListNode dummy = new ListNode(0);
        dummy.next = head ;
        ListNode tail = head ;

        int count = 1;
        while(tail.next != null){
            tail = tail.next ;
            count++ ;
        }
        k = k % count ;
        if(k == 0) return head ;
        ListNode curr = head ;
        ListNode prev = dummy ;
        for(int i = 0 ; i < count - k ; i++){
            prev = prev.next ;
            curr = curr.next ;
        }
        prev.next = null ;
        tail.next = head ;
        dummy.next = curr ;
        head = curr ;

        return dummy.next ;
        
    }
}
