/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head==null)return null;
        if(head.next == null && n==1)return null ;
        ListNode dummy  = new ListNode(0);
        dummy.next = head ;
        ListNode curr = head ;
        ListNode prev = dummy ;
        ListNode tail  = head ;
        int count = 1; 
        while(tail.next != null){
            count ++ ;
            tail = tail.next ;
        }
        for(int i = 0 ; i < count - n ; i++){
            prev = curr ;
            curr = curr.next ;
        }
        prev.next = curr.next ;
        curr = curr.next ;

        return dummy.next ;
        
    }
}
